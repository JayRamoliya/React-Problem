Link: https://www.youtube.com/watch?v=UxW-R3nrieY

30+ React JS Practice Problems || Master React JS 2024

npm create vite@latest
npm i
npm run dev

clean a all file

Task 1: create a simple "Hello World" React components
        - create a components folder 
        - inside a HelloWorld.jsx file and write a code
    

Task 2: build a counter application with increment and drecement buttons
        - create CounterApp.jsx file
        - using useState hooks to component re render with onclick event and change + - counter value


Task 3: create a form that takes user input and display it in real time
        - create FormInput.jsx file
        - using useState hooks to live user input show with onchange event and e.target.value 


Task 4: build a list component to display a list items
        - create ListItems.jsx file
        - create a items array
        - using map function to return item


Task 5: implement a basic toggle switch component
        - create ToggleSwitch.jsx file
        - using useState hooks to check box on off with onchange event


Task 6: create a component that fetches data from an api and display it
        - create FetchesAPI.jsx file
        - using useEffect hooks to fetches data and 
        - store useState hooks inside 
        - using map filter to show data


Task 7: build a timer that counts down from a specified time
        - create Timer.jsx file
        - using useState hooks to store timer and
        - using a useEffect hooks to drecement time -1 second with setTimeout


Task 8: implement a simple to-do list application with add and remove functionality
        - create ToDo.jsx file
        - using a two useState hooks for store input and todo values
        - using a two function


Task 9: create a component that changes its background color when clicked
        - Background.jsx file
        - using a useState hooks for store color with onclick event


Task 10: build a basic routing setup with react router
         - Routing.jsx file
         - install : npm i react-router-dom
         - using BrowserRouter, Routes, Route, Link, components
         - create a navbar like 


Task 11: create a component that displays a random quote each time it is rendered
          - Quote.jsx file
          - using a useState hooks for store quote
          - create a quotes array and generate a random number using math function with quotes length
          - create a button to change quote


Task 12: build a file uploader component that allows users to upload images
          - FileUploader.jsx file
          - using useState hooks for store file
          - using a input type file and onchange event callback functions to get e.target.files[0]
          - create a img using URL.createObjectURL


Task 13: implement a basic authentication form with login and registration


01:00:00